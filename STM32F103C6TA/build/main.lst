ARM GAS  /tmp/cc3eR6mv.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cc3eR6mv.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** UART_HandleTypeDef huart2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_ADC1_Init(void);
  58:Core/Src/main.c **** static void MX_I2C1_Init(void);
  59:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  60:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /**
  71:Core/Src/main.c ****   * @brief  The application entry point.
  72:Core/Src/main.c ****   * @retval int
  73:Core/Src/main.c ****   */
  74:Core/Src/main.c **** int main(void)
  75:Core/Src/main.c **** {
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.c ****   HAL_Init();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  /tmp/cc3eR6mv.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:Core/Src/main.c ****   MX_GPIO_Init();
  98:Core/Src/main.c ****   MX_ADC1_Init();
  99:Core/Src/main.c ****   MX_I2C1_Init();
 100:Core/Src/main.c ****   MX_USART1_UART_Init();
 101:Core/Src/main.c ****   MX_USART2_UART_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 113:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 114:Core/Src/main.c ****     HAL_Delay(1000);
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     uint8_t msg[] = "Hello World!\n";
 117:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, msg, strlen((char*)msg), 1000);
 118:Core/Src/main.c ****   }
 119:Core/Src/main.c ****   /* USER CODE END 3 */
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /**
 123:Core/Src/main.c ****   * @brief System Clock Configuration
 124:Core/Src/main.c ****   * @retval None
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c **** void SystemClock_Config(void)
 127:Core/Src/main.c **** {
 128:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 130:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/cc3eR6mv.s 			page 4


 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 161:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 162:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 170:Core/Src/main.c ****   * @param None
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** static void MX_ADC1_Init(void)
 174:Core/Src/main.c **** {
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Common config
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   hadc1.Instance = ADC1;
 189:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 190:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 191:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 192:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 193:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 194:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 195:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Configure Regular Channel
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 203:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 204:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
ARM GAS  /tmp/cc3eR6mv.s 			page 5


 205:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 217:Core/Src/main.c ****   * @param None
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** static void MX_I2C1_Init(void)
 221:Core/Src/main.c **** {
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 230:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 231:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 232:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 233:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 234:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 235:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 236:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 237:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 238:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 239:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief USART1 Initialization Function
 251:Core/Src/main.c ****   * @param None
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
ARM GAS  /tmp/cc3eR6mv.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 264:Core/Src/main.c ****   huart1.Instance = USART1;
 265:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 266:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 267:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 268:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 269:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 270:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 271:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 272:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****   * @brief USART2 Initialization Function
 284:Core/Src/main.c ****   * @param None
 285:Core/Src/main.c ****   * @retval None
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 288:Core/Src/main.c **** {
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 297:Core/Src/main.c ****   huart2.Instance = USART2;
 298:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 299:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 300:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 301:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 302:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 303:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 304:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 305:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** }
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /**
 316:Core/Src/main.c ****   * @brief GPIO Initialization Function
 317:Core/Src/main.c ****   * @param None
 318:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/cc3eR6mv.s 			page 7


 319:Core/Src/main.c ****   */
 320:Core/Src/main.c **** static void MX_GPIO_Init(void)
 321:Core/Src/main.c **** {
  26              		.loc 1 321 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 322:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 322 3 view .LVU1
  40              		.loc 1 322 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 323:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 324:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 327:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 327 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 327 3 view .LVU4
  49              		.loc 1 327 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 327 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 327 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 327 3 view .LVU8
 328:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 328 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 328 3 view .LVU10
  65              		.loc 1 328 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 328 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/cc3eR6mv.s 			page 8


  73              		.loc 1 328 3 view .LVU13
  74 0032 019A     		ldr	r2, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 328 3 view .LVU14
 329:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 329 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 329 3 view .LVU16
  80              		.loc 1 329 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00402 		orr	r2, r2, #4
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 329 3 view .LVU18
  85 003c 9A69     		ldr	r2, [r3, #24]
  86 003e 02F00402 		and	r2, r2, #4
  87 0042 0292     		str	r2, [sp, #8]
  88              		.loc 1 329 3 view .LVU19
  89 0044 029A     		ldr	r2, [sp, #8]
  90              	.LBE6:
  91              		.loc 1 329 3 view .LVU20
 330:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  92              		.loc 1 330 3 view .LVU21
  93              	.LBB7:
  94              		.loc 1 330 3 view .LVU22
  95              		.loc 1 330 3 view .LVU23
  96 0046 9A69     		ldr	r2, [r3, #24]
  97 0048 42F00802 		orr	r2, r2, #8
  98 004c 9A61     		str	r2, [r3, #24]
  99              		.loc 1 330 3 view .LVU24
 100 004e 9B69     		ldr	r3, [r3, #24]
 101 0050 03F00803 		and	r3, r3, #8
 102 0054 0393     		str	r3, [sp, #12]
 103              		.loc 1 330 3 view .LVU25
 104 0056 039B     		ldr	r3, [sp, #12]
 105              	.LBE7:
 106              		.loc 1 330 3 view .LVU26
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 333:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 107              		.loc 1 333 3 view .LVU27
 108 0058 0B4D     		ldr	r5, .L3+4
 109 005a 2246     		mov	r2, r4
 110 005c 4FF40051 		mov	r1, #8192
 111 0060 2846     		mov	r0, r5
 112 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 336:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 114              		.loc 1 336 3 view .LVU28
 115              		.loc 1 336 23 is_stmt 0 view .LVU29
 116 0066 4FF40053 		mov	r3, #8192
 117 006a 0493     		str	r3, [sp, #16]
 337:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 337 3 is_stmt 1 view .LVU30
 119              		.loc 1 337 24 is_stmt 0 view .LVU31
 120 006c 0123     		movs	r3, #1
ARM GAS  /tmp/cc3eR6mv.s 			page 9


 121 006e 0593     		str	r3, [sp, #20]
 338:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 338 3 is_stmt 1 view .LVU32
 123              		.loc 1 338 24 is_stmt 0 view .LVU33
 124 0070 0694     		str	r4, [sp, #24]
 339:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 125              		.loc 1 339 3 is_stmt 1 view .LVU34
 126              		.loc 1 339 25 is_stmt 0 view .LVU35
 127 0072 0323     		movs	r3, #3
 128 0074 0793     		str	r3, [sp, #28]
 340:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 129              		.loc 1 340 3 is_stmt 1 view .LVU36
 130 0076 04A9     		add	r1, sp, #16
 131 0078 2846     		mov	r0, r5
 132 007a FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 343:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 344:Core/Src/main.c **** }
 134              		.loc 1 344 1 is_stmt 0 view .LVU37
 135 007e 09B0     		add	sp, sp, #36
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0080 30BD     		pop	{r4, r5, pc}
 140              	.L4:
 141 0082 00BF     		.align	2
 142              	.L3:
 143 0084 00100240 		.word	1073876992
 144 0088 00100140 		.word	1073811456
 145              		.cfi_endproc
 146              	.LFE71:
 148              		.section	.text.Error_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	Error_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	Error_Handler:
 156              	.LFB72:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /* USER CODE END 4 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 352:Core/Src/main.c ****   * @retval None
 353:Core/Src/main.c ****   */
 354:Core/Src/main.c **** void Error_Handler(void)
 355:Core/Src/main.c **** {
 157              		.loc 1 355 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc3eR6mv.s 			page 10


 162              		@ link register save eliminated.
 356:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 357:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 358:Core/Src/main.c ****   __disable_irq();
 163              		.loc 1 358 3 view .LVU39
 164              	.LBB8:
 165              	.LBI8:
 166              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/cc3eR6mv.s 			page 11


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/cc3eR6mv.s 			page 12


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 167              		.loc 2 140 27 view .LVU40
 168              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 169              		.loc 2 142 3 view .LVU41
 170              		.syntax unified
 171              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 172 0000 72B6     		cpsid i
 173              	@ 0 "" 2
 174              		.thumb
 175              		.syntax unified
 176              	.L6:
 177              	.LBE9:
 178              	.LBE8:
 359:Core/Src/main.c ****   while (1)
 179              		.loc 1 359 3 view .LVU42
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****   }
 180              		.loc 1 361 3 view .LVU43
 359:Core/Src/main.c ****   while (1)
 181              		.loc 1 359 9 view .LVU44
 182 0002 FEE7     		b	.L6
 183              		.cfi_endproc
ARM GAS  /tmp/cc3eR6mv.s 			page 13


 184              	.LFE72:
 186              		.section	.text.MX_ADC1_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	MX_ADC1_Init:
 193              	.LFB67:
 174:Core/Src/main.c **** 
 194              		.loc 1 174 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 16
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 00B5     		push	{lr}
 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 14, -4
 202 0002 85B0     		sub	sp, sp, #20
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 24
 180:Core/Src/main.c **** 
 205              		.loc 1 180 3 view .LVU46
 180:Core/Src/main.c **** 
 206              		.loc 1 180 26 is_stmt 0 view .LVU47
 207 0004 0023     		movs	r3, #0
 208 0006 0193     		str	r3, [sp, #4]
 209 0008 0293     		str	r3, [sp, #8]
 210 000a 0393     		str	r3, [sp, #12]
 188:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 211              		.loc 1 188 3 is_stmt 1 view .LVU48
 188:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 212              		.loc 1 188 18 is_stmt 0 view .LVU49
 213 000c 0F48     		ldr	r0, .L13
 214 000e 104A     		ldr	r2, .L13+4
 215 0010 0260     		str	r2, [r0]
 189:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 216              		.loc 1 189 3 is_stmt 1 view .LVU50
 189:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 217              		.loc 1 189 27 is_stmt 0 view .LVU51
 218 0012 8360     		str	r3, [r0, #8]
 190:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 219              		.loc 1 190 3 is_stmt 1 view .LVU52
 190:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 220              		.loc 1 190 33 is_stmt 0 view .LVU53
 221 0014 0373     		strb	r3, [r0, #12]
 191:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 222              		.loc 1 191 3 is_stmt 1 view .LVU54
 191:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 223              		.loc 1 191 36 is_stmt 0 view .LVU55
 224 0016 0375     		strb	r3, [r0, #20]
 192:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 225              		.loc 1 192 3 is_stmt 1 view .LVU56
 192:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 226              		.loc 1 192 31 is_stmt 0 view .LVU57
 227 0018 4FF46022 		mov	r2, #917504
 228 001c C261     		str	r2, [r0, #28]
 193:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
ARM GAS  /tmp/cc3eR6mv.s 			page 14


 229              		.loc 1 193 3 is_stmt 1 view .LVU58
 193:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 230              		.loc 1 193 24 is_stmt 0 view .LVU59
 231 001e 4360     		str	r3, [r0, #4]
 194:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 232              		.loc 1 194 3 is_stmt 1 view .LVU60
 194:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 233              		.loc 1 194 30 is_stmt 0 view .LVU61
 234 0020 0123     		movs	r3, #1
 235 0022 0361     		str	r3, [r0, #16]
 195:Core/Src/main.c ****   {
 236              		.loc 1 195 3 is_stmt 1 view .LVU62
 195:Core/Src/main.c ****   {
 237              		.loc 1 195 7 is_stmt 0 view .LVU63
 238 0024 FFF7FEFF 		bl	HAL_ADC_Init
 239              	.LVL2:
 195:Core/Src/main.c ****   {
 240              		.loc 1 195 6 discriminator 1 view .LVU64
 241 0028 60B9     		cbnz	r0, .L11
 202:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 242              		.loc 1 202 3 is_stmt 1 view .LVU65
 202:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 243              		.loc 1 202 19 is_stmt 0 view .LVU66
 244 002a 0023     		movs	r3, #0
 245 002c 0193     		str	r3, [sp, #4]
 203:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 246              		.loc 1 203 3 is_stmt 1 view .LVU67
 203:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 247              		.loc 1 203 16 is_stmt 0 view .LVU68
 248 002e 0122     		movs	r2, #1
 249 0030 0292     		str	r2, [sp, #8]
 204:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 250              		.loc 1 204 3 is_stmt 1 view .LVU69
 204:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 251              		.loc 1 204 24 is_stmt 0 view .LVU70
 252 0032 0393     		str	r3, [sp, #12]
 205:Core/Src/main.c ****   {
 253              		.loc 1 205 3 is_stmt 1 view .LVU71
 205:Core/Src/main.c ****   {
 254              		.loc 1 205 7 is_stmt 0 view .LVU72
 255 0034 01A9     		add	r1, sp, #4
 256 0036 0548     		ldr	r0, .L13
 257 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 258              	.LVL3:
 205:Core/Src/main.c ****   {
 259              		.loc 1 205 6 discriminator 1 view .LVU73
 260 003c 20B9     		cbnz	r0, .L12
 213:Core/Src/main.c **** 
 261              		.loc 1 213 1 view .LVU74
 262 003e 05B0     		add	sp, sp, #20
 263              	.LCFI5:
 264              		.cfi_remember_state
 265              		.cfi_def_cfa_offset 4
 266              		@ sp needed
 267 0040 5DF804FB 		ldr	pc, [sp], #4
 268              	.L11:
 269              	.LCFI6:
ARM GAS  /tmp/cc3eR6mv.s 			page 15


 270              		.cfi_restore_state
 197:Core/Src/main.c ****   }
 271              		.loc 1 197 5 is_stmt 1 view .LVU75
 272 0044 FFF7FEFF 		bl	Error_Handler
 273              	.LVL4:
 274              	.L12:
 207:Core/Src/main.c ****   }
 275              		.loc 1 207 5 view .LVU76
 276 0048 FFF7FEFF 		bl	Error_Handler
 277              	.LVL5:
 278              	.L14:
 279              		.align	2
 280              	.L13:
 281 004c 00000000 		.word	hadc1
 282 0050 00240140 		.word	1073816576
 283              		.cfi_endproc
 284              	.LFE67:
 286              		.section	.text.MX_I2C1_Init,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	MX_I2C1_Init:
 293              	.LFB68:
 221:Core/Src/main.c **** 
 294              		.loc 1 221 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI7:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
 230:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 303              		.loc 1 230 3 view .LVU78
 230:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 304              		.loc 1 230 18 is_stmt 0 view .LVU79
 305 0002 0A48     		ldr	r0, .L19
 306 0004 0A4B     		ldr	r3, .L19+4
 307 0006 0360     		str	r3, [r0]
 231:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 308              		.loc 1 231 3 is_stmt 1 view .LVU80
 231:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 309              		.loc 1 231 25 is_stmt 0 view .LVU81
 310 0008 0A4B     		ldr	r3, .L19+8
 311 000a 4360     		str	r3, [r0, #4]
 232:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 312              		.loc 1 232 3 is_stmt 1 view .LVU82
 232:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 313              		.loc 1 232 24 is_stmt 0 view .LVU83
 314 000c 0023     		movs	r3, #0
 315 000e 8360     		str	r3, [r0, #8]
 233:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 316              		.loc 1 233 3 is_stmt 1 view .LVU84
 233:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 317              		.loc 1 233 26 is_stmt 0 view .LVU85
ARM GAS  /tmp/cc3eR6mv.s 			page 16


 318 0010 C360     		str	r3, [r0, #12]
 234:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 319              		.loc 1 234 3 is_stmt 1 view .LVU86
 234:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 320              		.loc 1 234 29 is_stmt 0 view .LVU87
 321 0012 4FF48042 		mov	r2, #16384
 322 0016 0261     		str	r2, [r0, #16]
 235:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 323              		.loc 1 235 3 is_stmt 1 view .LVU88
 235:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 324              		.loc 1 235 30 is_stmt 0 view .LVU89
 325 0018 4361     		str	r3, [r0, #20]
 236:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 326              		.loc 1 236 3 is_stmt 1 view .LVU90
 236:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 327              		.loc 1 236 26 is_stmt 0 view .LVU91
 328 001a 8361     		str	r3, [r0, #24]
 237:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 329              		.loc 1 237 3 is_stmt 1 view .LVU92
 237:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 330              		.loc 1 237 30 is_stmt 0 view .LVU93
 331 001c C361     		str	r3, [r0, #28]
 238:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 332              		.loc 1 238 3 is_stmt 1 view .LVU94
 238:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 333              		.loc 1 238 28 is_stmt 0 view .LVU95
 334 001e 0362     		str	r3, [r0, #32]
 239:Core/Src/main.c ****   {
 335              		.loc 1 239 3 is_stmt 1 view .LVU96
 239:Core/Src/main.c ****   {
 336              		.loc 1 239 7 is_stmt 0 view .LVU97
 337 0020 FFF7FEFF 		bl	HAL_I2C_Init
 338              	.LVL6:
 239:Core/Src/main.c ****   {
 339              		.loc 1 239 6 discriminator 1 view .LVU98
 340 0024 00B9     		cbnz	r0, .L18
 247:Core/Src/main.c **** 
 341              		.loc 1 247 1 view .LVU99
 342 0026 08BD     		pop	{r3, pc}
 343              	.L18:
 241:Core/Src/main.c ****   }
 344              		.loc 1 241 5 is_stmt 1 view .LVU100
 345 0028 FFF7FEFF 		bl	Error_Handler
 346              	.LVL7:
 347              	.L20:
 348              		.align	2
 349              	.L19:
 350 002c 00000000 		.word	hi2c1
 351 0030 00540040 		.word	1073763328
 352 0034 A0860100 		.word	100000
 353              		.cfi_endproc
 354              	.LFE68:
 356              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 357              		.align	1
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
ARM GAS  /tmp/cc3eR6mv.s 			page 17


 362              	MX_USART1_UART_Init:
 363              	.LFB69:
 255:Core/Src/main.c **** 
 364              		.loc 1 255 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 08B5     		push	{r3, lr}
 369              	.LCFI8:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 264:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 373              		.loc 1 264 3 view .LVU102
 264:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 374              		.loc 1 264 19 is_stmt 0 view .LVU103
 375 0002 0A48     		ldr	r0, .L25
 376 0004 0A4B     		ldr	r3, .L25+4
 377 0006 0360     		str	r3, [r0]
 265:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 378              		.loc 1 265 3 is_stmt 1 view .LVU104
 265:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 379              		.loc 1 265 24 is_stmt 0 view .LVU105
 380 0008 4FF4E133 		mov	r3, #115200
 381 000c 4360     		str	r3, [r0, #4]
 266:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 382              		.loc 1 266 3 is_stmt 1 view .LVU106
 266:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 383              		.loc 1 266 26 is_stmt 0 view .LVU107
 384 000e 0023     		movs	r3, #0
 385 0010 8360     		str	r3, [r0, #8]
 267:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 386              		.loc 1 267 3 is_stmt 1 view .LVU108
 267:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 387              		.loc 1 267 24 is_stmt 0 view .LVU109
 388 0012 C360     		str	r3, [r0, #12]
 268:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 389              		.loc 1 268 3 is_stmt 1 view .LVU110
 268:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 390              		.loc 1 268 22 is_stmt 0 view .LVU111
 391 0014 0361     		str	r3, [r0, #16]
 269:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 392              		.loc 1 269 3 is_stmt 1 view .LVU112
 269:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 393              		.loc 1 269 20 is_stmt 0 view .LVU113
 394 0016 0C22     		movs	r2, #12
 395 0018 4261     		str	r2, [r0, #20]
 270:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 396              		.loc 1 270 3 is_stmt 1 view .LVU114
 270:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 397              		.loc 1 270 25 is_stmt 0 view .LVU115
 398 001a 8361     		str	r3, [r0, #24]
 271:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 399              		.loc 1 271 3 is_stmt 1 view .LVU116
 271:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 400              		.loc 1 271 28 is_stmt 0 view .LVU117
 401 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/cc3eR6mv.s 			page 18


 272:Core/Src/main.c ****   {
 402              		.loc 1 272 3 is_stmt 1 view .LVU118
 272:Core/Src/main.c ****   {
 403              		.loc 1 272 7 is_stmt 0 view .LVU119
 404 001e FFF7FEFF 		bl	HAL_UART_Init
 405              	.LVL8:
 272:Core/Src/main.c ****   {
 406              		.loc 1 272 6 discriminator 1 view .LVU120
 407 0022 00B9     		cbnz	r0, .L24
 280:Core/Src/main.c **** 
 408              		.loc 1 280 1 view .LVU121
 409 0024 08BD     		pop	{r3, pc}
 410              	.L24:
 274:Core/Src/main.c ****   }
 411              		.loc 1 274 5 is_stmt 1 view .LVU122
 412 0026 FFF7FEFF 		bl	Error_Handler
 413              	.LVL9:
 414              	.L26:
 415 002a 00BF     		.align	2
 416              	.L25:
 417 002c 00000000 		.word	huart1
 418 0030 00380140 		.word	1073821696
 419              		.cfi_endproc
 420              	.LFE69:
 422              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 423              		.align	1
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	MX_USART2_UART_Init:
 429              	.LFB70:
 288:Core/Src/main.c **** 
 430              		.loc 1 288 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434 0000 08B5     		push	{r3, lr}
 435              	.LCFI9:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
 297:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 439              		.loc 1 297 3 view .LVU124
 297:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 440              		.loc 1 297 19 is_stmt 0 view .LVU125
 441 0002 0A48     		ldr	r0, .L31
 442 0004 0A4B     		ldr	r3, .L31+4
 443 0006 0360     		str	r3, [r0]
 298:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 444              		.loc 1 298 3 is_stmt 1 view .LVU126
 298:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 445              		.loc 1 298 24 is_stmt 0 view .LVU127
 446 0008 4FF4E133 		mov	r3, #115200
 447 000c 4360     		str	r3, [r0, #4]
 299:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 448              		.loc 1 299 3 is_stmt 1 view .LVU128
 299:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/cc3eR6mv.s 			page 19


 449              		.loc 1 299 26 is_stmt 0 view .LVU129
 450 000e 0023     		movs	r3, #0
 451 0010 8360     		str	r3, [r0, #8]
 300:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 452              		.loc 1 300 3 is_stmt 1 view .LVU130
 300:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 453              		.loc 1 300 24 is_stmt 0 view .LVU131
 454 0012 C360     		str	r3, [r0, #12]
 301:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 455              		.loc 1 301 3 is_stmt 1 view .LVU132
 301:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 456              		.loc 1 301 22 is_stmt 0 view .LVU133
 457 0014 0361     		str	r3, [r0, #16]
 302:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 458              		.loc 1 302 3 is_stmt 1 view .LVU134
 302:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 459              		.loc 1 302 20 is_stmt 0 view .LVU135
 460 0016 0C22     		movs	r2, #12
 461 0018 4261     		str	r2, [r0, #20]
 303:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 462              		.loc 1 303 3 is_stmt 1 view .LVU136
 303:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 463              		.loc 1 303 25 is_stmt 0 view .LVU137
 464 001a 8361     		str	r3, [r0, #24]
 304:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 465              		.loc 1 304 3 is_stmt 1 view .LVU138
 304:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 466              		.loc 1 304 28 is_stmt 0 view .LVU139
 467 001c C361     		str	r3, [r0, #28]
 305:Core/Src/main.c ****   {
 468              		.loc 1 305 3 is_stmt 1 view .LVU140
 305:Core/Src/main.c ****   {
 469              		.loc 1 305 7 is_stmt 0 view .LVU141
 470 001e FFF7FEFF 		bl	HAL_UART_Init
 471              	.LVL10:
 305:Core/Src/main.c ****   {
 472              		.loc 1 305 6 discriminator 1 view .LVU142
 473 0022 00B9     		cbnz	r0, .L30
 313:Core/Src/main.c **** 
 474              		.loc 1 313 1 view .LVU143
 475 0024 08BD     		pop	{r3, pc}
 476              	.L30:
 307:Core/Src/main.c ****   }
 477              		.loc 1 307 5 is_stmt 1 view .LVU144
 478 0026 FFF7FEFF 		bl	Error_Handler
 479              	.LVL11:
 480              	.L32:
 481 002a 00BF     		.align	2
 482              	.L31:
 483 002c 00000000 		.word	huart2
 484 0030 00440040 		.word	1073759232
 485              		.cfi_endproc
 486              	.LFE70:
 488              		.section	.text.SystemClock_Config,"ax",%progbits
 489              		.align	1
 490              		.global	SystemClock_Config
 491              		.syntax unified
ARM GAS  /tmp/cc3eR6mv.s 			page 20


 492              		.thumb
 493              		.thumb_func
 495              	SystemClock_Config:
 496              	.LFB66:
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 497              		.loc 1 127 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 80
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 00B5     		push	{lr}
 502              	.LCFI10:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 14, -4
 505 0002 95B0     		sub	sp, sp, #84
 506              	.LCFI11:
 507              		.cfi_def_cfa_offset 88
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 508              		.loc 1 128 3 view .LVU146
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 509              		.loc 1 128 22 is_stmt 0 view .LVU147
 510 0004 2822     		movs	r2, #40
 511 0006 0021     		movs	r1, #0
 512 0008 0DEB0200 		add	r0, sp, r2
 513 000c FFF7FEFF 		bl	memset
 514              	.LVL12:
 129:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 515              		.loc 1 129 3 is_stmt 1 view .LVU148
 129:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 516              		.loc 1 129 22 is_stmt 0 view .LVU149
 517 0010 0023     		movs	r3, #0
 518 0012 0593     		str	r3, [sp, #20]
 519 0014 0693     		str	r3, [sp, #24]
 520 0016 0793     		str	r3, [sp, #28]
 521 0018 0893     		str	r3, [sp, #32]
 522 001a 0993     		str	r3, [sp, #36]
 130:Core/Src/main.c **** 
 523              		.loc 1 130 3 is_stmt 1 view .LVU150
 130:Core/Src/main.c **** 
 524              		.loc 1 130 28 is_stmt 0 view .LVU151
 525 001c 0193     		str	r3, [sp, #4]
 526 001e 0293     		str	r3, [sp, #8]
 527 0020 0393     		str	r3, [sp, #12]
 528 0022 0493     		str	r3, [sp, #16]
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 529              		.loc 1 135 3 is_stmt 1 view .LVU152
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 530              		.loc 1 135 36 is_stmt 0 view .LVU153
 531 0024 0122     		movs	r2, #1
 532 0026 0A92     		str	r2, [sp, #40]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 533              		.loc 1 136 3 is_stmt 1 view .LVU154
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 534              		.loc 1 136 30 is_stmt 0 view .LVU155
 535 0028 4FF48033 		mov	r3, #65536
 536 002c 0B93     		str	r3, [sp, #44]
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 537              		.loc 1 137 3 is_stmt 1 view .LVU156
ARM GAS  /tmp/cc3eR6mv.s 			page 21


 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 538              		.loc 1 138 3 view .LVU157
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 539              		.loc 1 138 30 is_stmt 0 view .LVU158
 540 002e 0E92     		str	r2, [sp, #56]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 541              		.loc 1 139 3 is_stmt 1 view .LVU159
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 542              		.loc 1 139 34 is_stmt 0 view .LVU160
 543 0030 0222     		movs	r2, #2
 544 0032 1192     		str	r2, [sp, #68]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 545              		.loc 1 140 3 is_stmt 1 view .LVU161
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 546              		.loc 1 140 35 is_stmt 0 view .LVU162
 547 0034 1293     		str	r3, [sp, #72]
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 548              		.loc 1 141 3 is_stmt 1 view .LVU163
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 549              		.loc 1 141 32 is_stmt 0 view .LVU164
 550 0036 4FF4E013 		mov	r3, #1835008
 551 003a 1393     		str	r3, [sp, #76]
 142:Core/Src/main.c ****   {
 552              		.loc 1 142 3 is_stmt 1 view .LVU165
 142:Core/Src/main.c ****   {
 553              		.loc 1 142 7 is_stmt 0 view .LVU166
 554 003c 0AA8     		add	r0, sp, #40
 555 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 556              	.LVL13:
 142:Core/Src/main.c ****   {
 557              		.loc 1 142 6 discriminator 1 view .LVU167
 558 0042 C8B9     		cbnz	r0, .L38
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 559              		.loc 1 149 3 is_stmt 1 view .LVU168
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 560              		.loc 1 149 31 is_stmt 0 view .LVU169
 561 0044 0F23     		movs	r3, #15
 562 0046 0593     		str	r3, [sp, #20]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 563              		.loc 1 151 3 is_stmt 1 view .LVU170
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 564              		.loc 1 151 34 is_stmt 0 view .LVU171
 565 0048 0221     		movs	r1, #2
 566 004a 0691     		str	r1, [sp, #24]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 567              		.loc 1 152 3 is_stmt 1 view .LVU172
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 568              		.loc 1 152 35 is_stmt 0 view .LVU173
 569 004c 0023     		movs	r3, #0
 570 004e 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 571              		.loc 1 153 3 is_stmt 1 view .LVU174
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 572              		.loc 1 153 36 is_stmt 0 view .LVU175
 573 0050 4FF48062 		mov	r2, #1024
 574 0054 0892     		str	r2, [sp, #32]
 154:Core/Src/main.c **** 
ARM GAS  /tmp/cc3eR6mv.s 			page 22


 575              		.loc 1 154 3 is_stmt 1 view .LVU176
 154:Core/Src/main.c **** 
 576              		.loc 1 154 36 is_stmt 0 view .LVU177
 577 0056 0993     		str	r3, [sp, #36]
 156:Core/Src/main.c ****   {
 578              		.loc 1 156 3 is_stmt 1 view .LVU178
 156:Core/Src/main.c ****   {
 579              		.loc 1 156 7 is_stmt 0 view .LVU179
 580 0058 05A8     		add	r0, sp, #20
 581 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 582              	.LVL14:
 156:Core/Src/main.c ****   {
 583              		.loc 1 156 6 discriminator 1 view .LVU180
 584 005e 68B9     		cbnz	r0, .L39
 160:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 585              		.loc 1 160 3 is_stmt 1 view .LVU181
 160:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 586              		.loc 1 160 38 is_stmt 0 view .LVU182
 587 0060 0223     		movs	r3, #2
 588 0062 0193     		str	r3, [sp, #4]
 161:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 589              		.loc 1 161 3 is_stmt 1 view .LVU183
 161:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 590              		.loc 1 161 35 is_stmt 0 view .LVU184
 591 0064 4FF40043 		mov	r3, #32768
 592 0068 0393     		str	r3, [sp, #12]
 162:Core/Src/main.c ****   {
 593              		.loc 1 162 3 is_stmt 1 view .LVU185
 162:Core/Src/main.c ****   {
 594              		.loc 1 162 7 is_stmt 0 view .LVU186
 595 006a 01A8     		add	r0, sp, #4
 596 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 597              	.LVL15:
 162:Core/Src/main.c ****   {
 598              		.loc 1 162 6 discriminator 1 view .LVU187
 599 0070 30B9     		cbnz	r0, .L40
 166:Core/Src/main.c **** 
 600              		.loc 1 166 1 view .LVU188
 601 0072 15B0     		add	sp, sp, #84
 602              	.LCFI12:
 603              		.cfi_remember_state
 604              		.cfi_def_cfa_offset 4
 605              		@ sp needed
 606 0074 5DF804FB 		ldr	pc, [sp], #4
 607              	.L38:
 608              	.LCFI13:
 609              		.cfi_restore_state
 144:Core/Src/main.c ****   }
 610              		.loc 1 144 5 is_stmt 1 view .LVU189
 611 0078 FFF7FEFF 		bl	Error_Handler
 612              	.LVL16:
 613              	.L39:
 158:Core/Src/main.c ****   }
 614              		.loc 1 158 5 view .LVU190
 615 007c FFF7FEFF 		bl	Error_Handler
 616              	.LVL17:
 617              	.L40:
ARM GAS  /tmp/cc3eR6mv.s 			page 23


 164:Core/Src/main.c ****   }
 618              		.loc 1 164 5 view .LVU191
 619 0080 FFF7FEFF 		bl	Error_Handler
 620              	.LVL18:
 621              		.cfi_endproc
 622              	.LFE66:
 624              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 625              		.align	2
 626              	.LC0:
 627 0000 48656C6C 		.ascii	"Hello World!\012\000"
 627      6F20576F 
 627      726C6421 
 627      0A00
 628              		.section	.text.main,"ax",%progbits
 629              		.align	1
 630              		.global	main
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 635              	main:
 636              	.LFB65:
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 637              		.loc 1 75 1 view -0
 638              		.cfi_startproc
 639              		@ Volatile: function does not return.
 640              		@ args = 0, pretend = 0, frame = 16
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 00B5     		push	{lr}
 643              	.LCFI14:
 644              		.cfi_def_cfa_offset 4
 645              		.cfi_offset 14, -4
 646 0002 85B0     		sub	sp, sp, #20
 647              	.LCFI15:
 648              		.cfi_def_cfa_offset 24
  83:Core/Src/main.c **** 
 649              		.loc 1 83 3 view .LVU193
 650 0004 FFF7FEFF 		bl	HAL_Init
 651              	.LVL19:
  90:Core/Src/main.c **** 
 652              		.loc 1 90 3 view .LVU194
 653 0008 FFF7FEFF 		bl	SystemClock_Config
 654              	.LVL20:
  97:Core/Src/main.c ****   MX_ADC1_Init();
 655              		.loc 1 97 3 view .LVU195
 656 000c FFF7FEFF 		bl	MX_GPIO_Init
 657              	.LVL21:
  98:Core/Src/main.c ****   MX_I2C1_Init();
 658              		.loc 1 98 3 view .LVU196
 659 0010 FFF7FEFF 		bl	MX_ADC1_Init
 660              	.LVL22:
  99:Core/Src/main.c ****   MX_USART1_UART_Init();
 661              		.loc 1 99 3 view .LVU197
 662 0014 FFF7FEFF 		bl	MX_I2C1_Init
 663              	.LVL23:
 100:Core/Src/main.c ****   MX_USART2_UART_Init();
 664              		.loc 1 100 3 view .LVU198
 665 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
ARM GAS  /tmp/cc3eR6mv.s 			page 24


 666              	.LVL24:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 667              		.loc 1 101 3 view .LVU199
 668 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 669              	.LVL25:
 670              	.L42:
 108:Core/Src/main.c ****   {
 671              		.loc 1 108 3 view .LVU200
 672              	.LBB10:
 113:Core/Src/main.c ****     HAL_Delay(1000);
 673              		.loc 1 113 5 view .LVU201
 674 0020 4FF40051 		mov	r1, #8192
 675 0024 0C48     		ldr	r0, .L44
 676 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 677              	.LVL26:
 114:Core/Src/main.c **** 
 678              		.loc 1 114 5 view .LVU202
 679 002a 4FF47A70 		mov	r0, #1000
 680 002e FFF7FEFF 		bl	HAL_Delay
 681              	.LVL27:
 116:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, msg, strlen((char*)msg), 1000);
 682              		.loc 1 116 5 view .LVU203
 116:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, msg, strlen((char*)msg), 1000);
 683              		.loc 1 116 13 is_stmt 0 view .LVU204
 684 0032 0A4B     		ldr	r3, .L44+4
 685 0034 EC46     		mov	ip, sp
 686 0036 0FCB     		ldm	r3, {r0, r1, r2, r3}
 687 0038 ACE80700 		stmia	ip!, {r0, r1, r2}
 688 003c ACF80030 		strh	r3, [ip]	@ movhi
 117:Core/Src/main.c ****   }
 689              		.loc 1 117 5 is_stmt 1 view .LVU205
 117:Core/Src/main.c ****   }
 690              		.loc 1 117 37 is_stmt 0 view .LVU206
 691 0040 6846     		mov	r0, sp
 692 0042 FFF7FEFF 		bl	strlen
 693              	.LVL28:
 117:Core/Src/main.c ****   }
 694              		.loc 1 117 5 discriminator 1 view .LVU207
 695 0046 4FF47A73 		mov	r3, #1000
 696 004a 82B2     		uxth	r2, r0
 697 004c 6946     		mov	r1, sp
 698 004e 0448     		ldr	r0, .L44+8
 699 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 700              	.LVL29:
 701              	.LBE10:
 108:Core/Src/main.c ****   {
 702              		.loc 1 108 9 is_stmt 1 view .LVU208
 703 0054 E4E7     		b	.L42
 704              	.L45:
 705 0056 00BF     		.align	2
 706              	.L44:
 707 0058 00100140 		.word	1073811456
 708 005c 00000000 		.word	.LC0
 709 0060 00000000 		.word	huart2
 710              		.cfi_endproc
 711              	.LFE65:
 713              		.global	huart2
ARM GAS  /tmp/cc3eR6mv.s 			page 25


 714              		.section	.bss.huart2,"aw",%nobits
 715              		.align	2
 718              	huart2:
 719 0000 00000000 		.space	72
 719      00000000 
 719      00000000 
 719      00000000 
 719      00000000 
 720              		.global	huart1
 721              		.section	.bss.huart1,"aw",%nobits
 722              		.align	2
 725              	huart1:
 726 0000 00000000 		.space	72
 726      00000000 
 726      00000000 
 726      00000000 
 726      00000000 
 727              		.global	hi2c1
 728              		.section	.bss.hi2c1,"aw",%nobits
 729              		.align	2
 732              	hi2c1:
 733 0000 00000000 		.space	84
 733      00000000 
 733      00000000 
 733      00000000 
 733      00000000 
 734              		.global	hadc1
 735              		.section	.bss.hadc1,"aw",%nobits
 736              		.align	2
 739              	hadc1:
 740 0000 00000000 		.space	48
 740      00000000 
 740      00000000 
 740      00000000 
 740      00000000 
 741              		.text
 742              	.Letext0:
 743              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 744              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 745              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 746              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 747              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 748              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 749              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 750              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 751              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 752              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 753              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 754              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 755              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 756              		.file 16 "<built-in>"
ARM GAS  /tmp/cc3eR6mv.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc3eR6mv.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/cc3eR6mv.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cc3eR6mv.s:143    .text.MX_GPIO_Init:00000084 $d
     /tmp/cc3eR6mv.s:149    .text.Error_Handler:00000000 $t
     /tmp/cc3eR6mv.s:155    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc3eR6mv.s:187    .text.MX_ADC1_Init:00000000 $t
     /tmp/cc3eR6mv.s:192    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/cc3eR6mv.s:281    .text.MX_ADC1_Init:0000004c $d
     /tmp/cc3eR6mv.s:739    .bss.hadc1:00000000 hadc1
     /tmp/cc3eR6mv.s:287    .text.MX_I2C1_Init:00000000 $t
     /tmp/cc3eR6mv.s:292    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/cc3eR6mv.s:350    .text.MX_I2C1_Init:0000002c $d
     /tmp/cc3eR6mv.s:732    .bss.hi2c1:00000000 hi2c1
     /tmp/cc3eR6mv.s:357    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/cc3eR6mv.s:362    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/cc3eR6mv.s:417    .text.MX_USART1_UART_Init:0000002c $d
     /tmp/cc3eR6mv.s:725    .bss.huart1:00000000 huart1
     /tmp/cc3eR6mv.s:423    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/cc3eR6mv.s:428    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/cc3eR6mv.s:483    .text.MX_USART2_UART_Init:0000002c $d
     /tmp/cc3eR6mv.s:718    .bss.huart2:00000000 huart2
     /tmp/cc3eR6mv.s:489    .text.SystemClock_Config:00000000 $t
     /tmp/cc3eR6mv.s:495    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc3eR6mv.s:625    .rodata.main.str1.4:00000000 $d
     /tmp/cc3eR6mv.s:629    .text.main:00000000 $t
     /tmp/cc3eR6mv.s:635    .text.main:00000000 main
     /tmp/cc3eR6mv.s:707    .text.main:00000058 $d
     /tmp/cc3eR6mv.s:715    .bss.huart2:00000000 $d
     /tmp/cc3eR6mv.s:722    .bss.huart1:00000000 $d
     /tmp/cc3eR6mv.s:729    .bss.hi2c1:00000000 $d
     /tmp/cc3eR6mv.s:736    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
strlen
HAL_UART_Transmit
